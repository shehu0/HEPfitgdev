libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I./Config -I/home/shehu/wip/RooStat/dev/MultiNestPlugin/local/include -I/home/shehu/wip/npflavour/builds/local/include -I/home/shehu/wip/RooStat/dev/MultiNestPlugin/local/include/root -I/home/shehu/wip/npflavour/builds/local/include -I/usr/local/include -D__MY_DEBUG__ -I./ComputeObservables/src -I./ComputeObservables/src -I./EventGeneration/src -I./gslpp/src -I./InputParser/src -I./LoopFunctions/src -I./MonteCarlo/src -I./Observables/src -I./StandardModel/src -I./EW/src -std=c++11 -MT MonteCarlo/src/libHEPfit_0.3_la-MultiNest.lo -MD -MP -MF MonteCarlo/src/.deps/libHEPfit_0.3_la-MultiNest.Tpo -c MonteCarlo/src/MultiNest.cxx  -fPIC -DPIC -o MonteCarlo/src/.libs/libHEPfit_0.3_la-MultiNest.o
MonteCarlo/src/MultiNest.cxx: In constructor 'MultiNest::MultiNest(ModelFactory&, ThObsFactory&, const string&)':
MonteCarlo/src/MultiNest.cxx:13:1: error: uninitialized reference member in 'class ModelFactory&' [-fpermissive]
 MultiNest::MultiNest( ModelFactory& ModelF_i, ThObsFactory& ThObsF_i, 
 ^
In file included from MonteCarlo/src/MultiNest.cxx:8:0:
MonteCarlo/src/MultiNest.h:32:17: note: 'ModelFactory& MultiNest::ModelF' should be initialized
   ModelFactory& ModelF;
                 ^
MonteCarlo/src/MultiNest.cxx:13:1: error: uninitialized reference member in 'class ThObsFactory&' [-fpermissive]
 MultiNest::MultiNest( ModelFactory& ModelF_i, ThObsFactory& ThObsF_i, 
 ^
In file included from MonteCarlo/src/MultiNest.cxx:8:0:
MonteCarlo/src/MultiNest.h:33:17: note: 'ThObsFactory& MultiNest::ThObsF' should be initialized
   ThObsFactory& ThObsF;
                 ^
MonteCarlo/src/MultiNest.cxx:13:1: error: uninitialized reference member in 'const string& {aka const class std::basic_string<char>&}' [-fpermissive]
 MultiNest::MultiNest( ModelFactory& ModelF_i, ThObsFactory& ThObsF_i, 
 ^
In file included from MonteCarlo/src/MultiNest.cxx:8:0:
MonteCarlo/src/MultiNest.h:34:22: note: 'const string& MultiNest::ModelConf' should be initialized
   const std::string& ModelConf;
                      ^
MonteCarlo/src/MultiNest.cxx:13:1: error: uninitialized reference member in 'class RooWorkspace&' [-fpermissive]
 MultiNest::MultiNest( ModelFactory& ModelF_i, ThObsFactory& ThObsF_i, 
 ^
In file included from MonteCarlo/src/MultiNest.cxx:8:0:
MonteCarlo/src/MultiNest.h:37:17: note: 'RooWorkspace& MultiNest::wSpace' should be initialized
   RooWorkspace& wSpace;  // Workspace to store objects
                 ^
make: *** [MonteCarlo/src/libHEPfit_0.3_la-MultiNest.lo] Error 1



HEPfit - a Fitting Tool for the Standard Model and Beyond
===========================================================================

Only Root v6 is supported.

version in progress
-------------------
For SusyFit-0.2 (released before the SusyFit-to-HEPfit renaming) GNU
Build version, please see
https://github.com/silvest/HEPfit/tree/SusyFit-0.2_GNU_version
or the cmake version http://hepfit.roma1.infn.it/SusyFit-0.2.tar.gz 

HEPfit is a flexible tool which, given the Standard Model or any extension,
allows to:

  - fit the model parameters to a given set of experimental observables
  - obtain fit results for observables
  - obtain predictions for observables

HEPfit can be used:

  - as an executable in Monte Carlo mode, to perform a Bayesian Markov Chain
    Monte Carlo analysis of the given model
  - as an executable in single event mode, to obtain predictions of observables
    for a given point in the parameter space of the model
  - in library mode, to obtain predictions of observables for a given point
    in the parameter space of the model, allowing our computational tool to
    be used in any statistical framework

The Monte Carlo mode is based on the BAT (Bayesian Analysis Toolkit) library.

Availability:
-------------
HEPfit is available from [the HEPfit webpage](http://hepfit.roma1.infn.it/).
See COPYING file for licensing terms.

Installation:
-------------
HEPfit can be built by either using the "./configure;make" method or
using CMake. The first method is the one applicable for this GNU Build
version of the HEPfit. It should work on all Unix-like machines
but will require the cygwin environment for it to work on Windows
machines. For using cmake, please refer to https://github.com/silvest/HEPfit.  

To compile and install HEPfit, the following have to be availabled installed:
GSL, LoopTools, Boost, ROOT, BAT and FeynHiggs. The current version in
progress is compatible with FeynHiggs v2.11.2 or v2.10.0 only! If all
these are installed in the default install prefix (/usr/local) then
run the following commands to install HEPfit into /usr/local: 

	./configure
	make -j 4
	make install

To chose a non-default directory where HEPfit will be installed, set
the prefix (default is /usr/local) with --prefix=/custom/install/path
argument to configure. Likewise to set a non-default directory where
BAT, for example, is installed, set the --with-bat=/custom/path
argument to configure. An example is 

	./configure --prefix=/install/path --with-bat=/BATinstall/dir 
	
Read the output of the command 'configure --help' for the list of
options and environment variables that can be passed to configure.

See the INSTALL file for detailed installation instructions.

Support:
--------
There is not yet a manual for HEPfit. For additional information and
contacting the authors, please, consult [the HEPfit
webpage](http://hepfit.roma1.infn.it/).

===========================================================================
This file is part of HEPfit
Copyright (C) 2012  The HEPfit Collaboration

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License version 3 as 
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
